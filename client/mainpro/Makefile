#############################################################################
# Makefile for building: mainpro
# Generated by qmake (2.01a) (Qt 4.7.4) on: ?? 9? 25 22:07:41 2014
# Project:  mainpro.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -o Makefile mainpro.pro
#############################################################################

####### Compiler, tools and options

CC            = i586-mingw32msvc-gcc
CXX           = i586-mingw32msvc-g++
DEFINES       = -DQT_WEBKIT
CFLAGS        = -pipe -O2 -Wall -W $(DEFINES)
CXXFLAGS      = --pipe -O2 -Wall -W $(DEFINES)
INCPATH       =
LINK          = i586-mingw32msvc-gcc
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS) -luserenv -lws2_32 -lnetapi32 -lwtsapi32 -L/media/f01a9cd1-2570-4619-b4cd-41a27bdcfbd3/src/工具箱/posix-io-for-windows -lposixio
AR            = i586-mingw32msvc-ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = i586-mingw32msvc-strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = socket.c \
		service.c \
		main.c \
		model.c \
		xqueue.c \
		batch.c \
		systeminfo.c \
		postman.c \
		http.c \
		base.c \
		transfile.c 
OBJECTS       = socket.o \
		service.o \
		main.o \
		model.o \
		xqueue.o \
		batch.o \
		systeminfo.o \
		postman.o \
		http.o \
		base.o \
		transfile.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		mainpro.pro
QMAKE_TARGET  = mainpro
DESTDIR       = 
TARGET        = enigma.exe

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: mainpro.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf
	$(QMAKE) -o Makefile mainpro.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -o Makefile mainpro.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/mainpro1.0.0 || $(MKDIR) .tmp/mainpro1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/mainpro1.0.0/ && (cd `dirname .tmp/mainpro1.0.0` && $(TAR) mainpro1.0.0.tar mainpro1.0.0 && $(COMPRESS) mainpro1.0.0.tar) && $(MOVE) `dirname .tmp/mainpro1.0.0`/mainpro1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/mainpro1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

socket.o: socket.c common.h \
		socket.h \
		model.h \
		batch.h \
		postman.h \
		transfile.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o socket.o socket.c

service.o: service.c service.h \
		common.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o service.o service.c

main.o: main.c common.h \
		service.h \
		socket.h \
		model.h \
		batch.h \
		systeminfo.h \
		postman.h \
		http.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o main.o main.c

model.o: model.c model.h \
		transfile.h \
		common.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o model.o model.c

xqueue.o: xqueue.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o xqueue.o xqueue.c

batch.o: batch.c socket.h \
		model.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o batch.o batch.c

systeminfo.o: systeminfo.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o systeminfo.o systeminfo.c

postman.o: postman.c model.h \
		service.h \
		common.h \
		socket.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o postman.o postman.c

http.o: http.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o http.o http.c

base.o: base.c common.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o base.o base.c

transfile.o: transfile.c transfile.h \
		common.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o transfile.o transfile.c

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

